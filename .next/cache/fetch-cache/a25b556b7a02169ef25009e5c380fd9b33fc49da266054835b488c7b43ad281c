{"kind":"FETCH","data":{"headers":{"connection":"close","content-encoding":"gzip","content-type":"application/json","date":"Mon, 19 Jun 2023 10:40:52 GMT","transfer-encoding":"chunked","vary":"RSC, Next-Router-State-Tree, Next-Router-Prefetch, Accept-Encoding"},"body":"","status":200,"tags":["/(posts)/post/[slug]/page"]},"revalidate":31536000}